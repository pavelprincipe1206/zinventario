/*
 * Project home: https://github.com/jaxio/celerio-angular-quickstart
 * 
 * Source code generated by Celerio, an Open Source code generator by Jaxio.
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Modificado por CARLOS BAZALAR
 * Email: cbazalarlarosa@gmail.com
 * Template pack-angular:src/main/java/domain/Entity.java.e.vm
 */
package com.incloud.hcp.domain;

import com.google.common.base.MoreObjects;

import javax.persistence.*;
import javax.validation.constraints.Size;
import java.io.Serializable;
import java.util.logging.Logger;

import static javax.persistence.GenerationType.SEQUENCE;

@Entity
@Table(name = "BOLETA")
//@Audited
//@AuditTable("_audi_BOLETA")
public class Boleta extends BaseDomain implements Identifiable<Integer>, Serializable {
    private static final long serialVersionUID = 1L;
    private static final Logger log = Logger.getLogger(Boleta.class.getName());

    /***************************/
    /* Atributos de la Entidad */
    /***************************/

    // Raw attributes
    private Integer id;
    private String direccion;
    private String nombrePersona;
    private String tipoPersona;

    @Override
    public String entityClassName() {
        return Boleta.class.getSimpleName();
    }

    // -- [id] ------------------------

    @Override
    @Column(name = "ID_BOLETA", precision = 5)
    @GeneratedValue(strategy = SEQUENCE, generator = "seq_BOLETA")
    @Id
    @SequenceGenerator(name = "seq_BOLETA", sequenceName = "seq_BOLETA", allocationSize = 1)
    public Integer getId() {
        return id;
    }

    @Override
    public void setId(Integer id) {
        this.id = id;
    }

    public Boleta id(Integer id) {
        setId(id);
        return this;
    }

    @Override
    @Transient
    public boolean isIdSet() {
        return id != null;
    }
    // -- [direccion] ------------------------

    @Size(max = 255, message = "{message.boleta.direccion.sizeMax} {max} {message.caracter}")
    @Column(name = "DIRECCION")
    public String getDireccion() {
        return direccion;
    }

    public void setDireccion(String direccion) {
        this.direccion = direccion;
    }

    public Boleta direccion(String direccion) {
        setDireccion(direccion);
        return this;
    }
    // -- [nombrePersona] ------------------------

    @Size(max = 255, message = "{message.boleta.nombrePersona.sizeMax} {max} {message.caracter}")
    @Column(name = "NOMBRE_PERSONA")
    public String getNombrePersona() {
        return nombrePersona;
    }

    public void setNombrePersona(String nombrePersona) {
        this.nombrePersona = nombrePersona;
    }

    public Boleta nombrePersona(String nombrePersona) {
        setNombrePersona(nombrePersona);
        return this;
    }
    // -- [tipoPersona] ------------------------

    @Size(max = 2, message = "{message.boleta.tipoPersona.sizeMax} {max} {message.caracter}")
    @Column(name = "TIPO_PERSONA", length = 2)
    public String getTipoPersona() {
        return tipoPersona;
    }

    public void setTipoPersona(String tipoPersona) {
        this.tipoPersona = tipoPersona;
    }

    public Boleta tipoPersona(String tipoPersona) {
        setTipoPersona(tipoPersona);
        return this;
    }

    /**
     * Apply the default values.
     */
    public Boleta withDefaults() {
        return this;
    }

    /**
     * Equals implementation using a business key.
     */
    @Override
    public boolean equals(Object other) {
        return this == other || (other instanceof Boleta && hashCode() == other.hashCode());
    }

    private IdentifiableHashBuilder identifiableHashBuilder = new IdentifiableHashBuilder();

    @Override
    public int hashCode() {
        return identifiableHashBuilder.hash(log, this);
    }

    /**
     * Construct a readable string representation for this Boleta instance.
     * @see Object#toString()
     */
    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this) //
                .add("id", getId()) //
                .add("direccion", getDireccion()) //
                .add("nombrePersona", getNombrePersona()) //
                .add("tipoPersona", getTipoPersona()) //
                .toString();
    }
}
