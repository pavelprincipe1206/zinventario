/*
 * Project home: https://github.com/jaxio/celerio-angular-quickstart
 * 
 * Source code generated by Celerio, an Open Source code generator by Jaxio.
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Modificado por CARLOS BAZALAR
 * Email: cbazalarlarosa@gmail.com
 * Template pack-angular:src/main/java/domain/Entity.java.e.vm
 */
package com.incloud.hcp.domain;

import com.google.common.base.MoreObjects;

import javax.persistence.*;
import javax.validation.constraints.Digits;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import java.io.Serializable;
import java.math.BigDecimal;
import java.util.logging.Logger;

import static javax.persistence.GenerationType.SEQUENCE;

@Entity
@Table(name = "item")
//@Audited
//@AuditTable("_audi_ITEM")
public class Item extends BaseDomain implements Identifiable<Integer>, Serializable {
    private static final long serialVersionUID = 1L;
    private static final Logger log = Logger.getLogger(Item.class.getName());

    /***************************/
    /* Atributos de la Entidad */
    /***************************/

    // Raw attributes
    private Integer id;
    private String descripcion;
    private Integer cantidad;
    private BigDecimal precioUnitario;

    // Many to one
    private Boleta boleta;

    @Override
    public String entityClassName() {
        return Item.class.getSimpleName();
    }

    // -- [id] ------------------------

    @Override
    @Column(name = "id_item", precision = 5)
    @GeneratedValue(strategy = SEQUENCE, generator = "seq_item")
    @Id
    @SequenceGenerator(name = "seq_item", sequenceName = "seq_item", allocationSize = 1)
    public Integer getId() {
        return id;
    }

    @Override
    public void setId(Integer id) {
        this.id = id;
    }

    public Item id(Integer id) {
        setId(id);
        return this;
    }

    @Override
    @Transient
    public boolean isIdSet() {
        return id != null;
    }
    // -- [descripcion] ------------------------

    @Size(max = 255, message = "{message.item.descripcion.sizeMax} {max} {message.caracter}")
    @Column(name = "descripcion")
    public String getDescripcion() {
        return descripcion;
    }

    public void setDescripcion(String descripcion) {
        this.descripcion = descripcion;
    }

    public Item descripcion(String descripcion) {
        setDescripcion(descripcion);
        return this;
    }
    // -- [cantidad] ------------------------

    @Digits(integer = 5, fraction = 0)
    @NotNull
    @Column(name = "cantidad", nullable = false, precision = 5)
    public Integer getCantidad() {
        return cantidad;
    }

    public void setCantidad(Integer cantidad) {
        this.cantidad = cantidad;
    }

    public Item cantidad(Integer cantidad) {
        setCantidad(cantidad);
        return this;
    }
    // -- [precioUnitario] ------------------------

    @Digits(integer = 17, fraction = 2)
    @Column(name = "precio_unitario", precision = 19, scale = 2)
    public BigDecimal getPrecioUnitario() {
        return precioUnitario;
    }

    public void setPrecioUnitario(BigDecimal precioUnitario) {
        this.precioUnitario = precioUnitario;
    }

    public Item precioUnitario(BigDecimal precioUnitario) {
        setPrecioUnitario(precioUnitario);
        return this;
    }

    // -----------------------------------------------------------------
    // Many to One support
    // -----------------------------------------------------------------

    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    // many-to-one: Item.idBoleta ==> Boleta.id
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    @NotNull
    @JoinColumn(name = "id_boleta", nullable = false)
    @ManyToOne
    public Boleta getBoleta() {
        return boleta;
    }

    /**
     * Set the {@link #boleta} without adding this Item instance on the passed {@link #boleta}
     */
    public void setBoleta(Boleta boleta) {
        this.boleta = boleta;
    }

    public Item boleta(Boleta boleta) {
        setBoleta(boleta);
        return this;
    }

    /**
     * Apply the default values.
     */
    public Item withDefaults() {
        return this;
    }

    /**
     * Equals implementation using a business key.
     */
    @Override
    public boolean equals(Object other) {
        return this == other || (other instanceof Item && hashCode() == other.hashCode());
    }

    private IdentifiableHashBuilder identifiableHashBuilder = new IdentifiableHashBuilder();

    @Override
    public int hashCode() {
        return identifiableHashBuilder.hash(log, this);
    }

    /**
     * Construct a readable string representation for this Item instance.
     * @see Object#toString()
     */
    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this) //
                .add("id", getId()) //
                .add("descripcion", getDescripcion()) //
                .add("cantidad", getCantidad()) //
                .add("precioUnitario", getPrecioUnitario()) //
                .add("idBole", getBoleta()) //
                .toString();
    }
}
