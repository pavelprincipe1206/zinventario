/*
 * Project home: https://github.com/jaxio/celerio-angular-quickstart
 * 
 * Source code generated by Celerio, an Open Source code generator by Jaxio.
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Modificado por CARLOS BAZALAR
 * Email: cbazalarlarosa@gmail.com
 * Template pack-angular:src/main/java/domain/Entity.java.e.vm
 */
package com.incloud.hcp.domain;

import com.google.common.base.MoreObjects;

import javax.persistence.*;
import javax.validation.constraints.Digits;
import javax.validation.constraints.NotNull;
import java.io.Serializable;
import java.math.BigDecimal;
import java.util.logging.Logger;

import static javax.persistence.GenerationType.SEQUENCE;

@Entity
@Table(name = "LOTE")
//@Audited
//@AuditTable("_audi_LOTE")
public class Lote extends BaseDomain implements Identifiable<Integer>, Serializable {
    private static final long serialVersionUID = 1L;
    private static final Logger log = Logger.getLogger(Lote.class.getName());

    /***************************/
    /* Atributos de la Entidad */
    /***************************/

    // Raw attributes
    private Integer id;
    private Integer stock;
    private BigDecimal precio;

    // Many to one
    private Producto idProducto;

    @Override
    public String entityClassName() {
        return Lote.class.getSimpleName();
    }

    // -- [id] ------------------------

    @Override
    @Column(name = "ID_LOTE", precision = 5)
    @GeneratedValue(strategy = SEQUENCE, generator = "seq_LOTE")
    @Id
    @SequenceGenerator(name = "seq_LOTE", sequenceName = "seq_LOTE", allocationSize = 1)
    public Integer getId() {
        return id;
    }

    @Override
    public void setId(Integer id) {
        this.id = id;
    }

    public Lote id(Integer id) {
        setId(id);
        return this;
    }

    @Override
    @Transient
    public boolean isIdSet() {
        return id != null;
    }
    // -- [stock] ------------------------

    @Digits(integer = 5, fraction = 0)
    @NotNull
    @Column(name = "STOCK", nullable = false, precision = 5)
    public Integer getStock() {
        return stock;
    }

    public void setStock(Integer stock) {
        this.stock = stock;
    }

    public Lote stock(Integer stock) {
        setStock(stock);
        return this;
    }
    // -- [precio] ------------------------

    @Digits(integer = 17, fraction = 2)
    @Column(name = "PRECIO", precision = 19, scale = 2)
    public BigDecimal getPrecio() {
        return precio;
    }

    public void setPrecio(BigDecimal precio) {
        this.precio = precio;
    }

    public Lote precio(BigDecimal precio) {
        setPrecio(precio);
        return this;
    }

    // -----------------------------------------------------------------
    // Many to One support
    // -----------------------------------------------------------------

    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    // many-to-one: Lote.idProducto ==> Producto.id
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    @NotNull
    @JoinColumn(name = "ID_PRODUCTO", nullable = false)
    @ManyToOne
    public Producto getIdProducto() {
        return idProducto;
    }

    /**
     * Set the {@link #idProducto} without adding this Lote instance on the passed {@link #idProducto}
     */
    public void setIdProducto(Producto idProducto) {
        this.idProducto = idProducto;
    }

    public Lote idProducto(Producto idProducto) {
        setIdProducto(idProducto);
        return this;
    }

    /**
     * Apply the default values.
     */
    public Lote withDefaults() {
        return this;
    }

    /**
     * Equals implementation using a business key.
     */
    @Override
    public boolean equals(Object other) {
        return this == other || (other instanceof Lote && hashCode() == other.hashCode());
    }

    private IdentifiableHashBuilder identifiableHashBuilder = new IdentifiableHashBuilder();

    @Override
    public int hashCode() {
        return identifiableHashBuilder.hash(log, this);
    }

    /**
     * Construct a readable string representation for this Lote instance.
     * @see Object#toString()
     */
    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this) //
                .add("id", getId()) //
                .add("stock", getStock()) //
                .add("idProduc", getIdProduc()) //    
                .add("precio", getPrecio()) //
                .toString();
    }
}
